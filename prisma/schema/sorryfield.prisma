model Song {
  id              Int      @id
  locale          String
  title           String
  subTitle        String?
  artist          String
  artistSub       String?
  subArtist       String?
  gender          String
  key             String
  trebleModal     Int
  trebleFalsetto  Int?
  youtubeKaraoke  String
  youtubeOriginal String
  karaokeTJ       Int?
  karaokeKY       Int?
  karaokeJS       Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Chart Chart[]

  PlayRecords PlayRecords[]
}

model Chart {
  id              Int
  songId          Int
  chartTitle      String
  mode            String
  userId          String
  referenceLevel  Float
  playVideo       String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Song           Song @relation(fields: [songId], references: [id])
  SorryfieldUser SorryfieldUser @relation(fields: [userId], references: [id])
  ChartLevel     ChartLevel[]
  ChartTags      ChartTags[]
  ChartRaw       ChartRaw[]

  @@id([id, mode])
  PlayRecords PlayRecords[]
}

model ChartLevel {
  id              Int
  mode            String
  levelType       String
  editorLevel     Float

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Chart Chart @relation(fields: [id, mode], references: [id, mode])

  @@id([id, mode, levelType])
}

model ChartTags {
  id              Int
  mode            String
  tag             String
  color           String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Chart Chart @relation(fields: [id, mode], references: [id, mode])

  @@id([id, mode, tag])
}

model ChartRaw {
  id              Int
  mode            String
  raw             String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Chart Chart @relation(fields: [id, mode], references: [id, mode])

  @@id([id, mode])
}

model SorryfieldUser {
  id            String @id
  name          String @unique
  icon          String?
  level         Int?
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Chart Chart[]
  User User[]

  UserJjams UserJjams[]

  PlayRecords PlayRecords[]
}

model UserJjams {
  id String @id
  G  Float?
  B  Float?
  S  Float?
  H  Float?
  GT Int?
  BT Int?
  ST Int?
  HT Int?

  SorryFieldUser SorryfieldUser @relation(fields: [id], references: [id])
}

model PlayRecords {
  id                     Int

  songId                 Int
  chartId                Int
  mode                   String
  userId                 String

  accuracy               Float
  accuracyBonus          Float
  score                  Int
  grade                  String

  advantage_rateNarrow   Float?
  advantage_noteSpeed    Float?
  advantage_transparency Boolean?

  playDate               DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Song Song @relation(fields: [songId], references: [id])
  Chart Chart @relation(fields: [chartId, mode], references: [id, mode])
  SorryfieldUser SorryfieldUser @relation(fields: [userId], references: [id])

  @@id([id, mode])
}